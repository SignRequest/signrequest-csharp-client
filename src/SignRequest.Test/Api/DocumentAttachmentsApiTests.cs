/* 
 * SignRequest API
 *
 * API for SignRequest.com
 *
 * OpenAPI spec version: v1
 * Contact: tech-support@signrequest.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using SignRequest.Client;
using SignRequest.Api;
using SignRequest.Model;

namespace SignRequest.Test
{
    /// <summary>
    ///  Class for testing DocumentAttachmentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DocumentAttachmentsApiTests
    {
        private DocumentAttachmentsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DocumentAttachmentsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DocumentAttachmentsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DocumentAttachmentsApi
            //Assert.IsInstanceOfType(typeof(DocumentAttachmentsApi), instance, "instance is a DocumentAttachmentsApi");
        }

        
        /// <summary>
        /// Test DocumentAttachmentsCreate
        /// </summary>
        [Test]
        public void DocumentAttachmentsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DocumentAttachment data = null;
            //var response = instance.DocumentAttachmentsCreate(data);
            //Assert.IsInstanceOf<DocumentAttachment> (response, "response is DocumentAttachment");
        }
        
        /// <summary>
        /// Test DocumentAttachmentsList
        /// </summary>
        [Test]
        public void DocumentAttachmentsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string documentUuid = null;
            //string documentExternalId = null;
            //string created = null;
            //int? page = null;
            //int? limit = null;
            //var response = instance.DocumentAttachmentsList(documentUuid, documentExternalId, created, page, limit);
            //Assert.IsInstanceOf<InlineResponse2001> (response, "response is InlineResponse2001");
        }
        
        /// <summary>
        /// Test DocumentAttachmentsRead
        /// </summary>
        [Test]
        public void DocumentAttachmentsReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uuid = null;
            //var response = instance.DocumentAttachmentsRead(uuid);
            //Assert.IsInstanceOf<DocumentAttachment> (response, "response is DocumentAttachment");
        }
        
    }

}
